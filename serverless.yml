service: ecr-scan-lambda

provider:
  name: aws
  runtime: go1.x
  timeout: 10
  region: ${env:AWS_REGION}
  memorySize: 128
  stage: ${opt:stage, 'dev'}
  environment:
    ENV: ${self:provider.stage}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - ecr:GetAuthorizationToken
        - ecr:DescribeRepositories
        - ecr:ListImages
        - ecr:DescribeImages
        - ecr:DescribeImageScanFindings
        - logs:PutLogEvents
        - logs:CreateLogGroup
        - logs:CreateLogStream
      Resource: "*"
package:
 exclude:
   - ./**
 include:
   - ./bin/**

functions:
  ecr-report-lambda:
    handler: bin/handler
    environment:
      ENV: ${self:provider.stage}
      AWS_REGION: us-east-1
      MINIMUM_SEVERITY: MEDIUM
      SLACK_TOKEN: ""
      SLACK_CHANNEL: ""
      #ECR_ID: 
      #EMOJI_CRITICAL:
      #EMOJI_HIGH:
      #EMOJI_MEDIUM:
      #EMOJI_LOW:
      #EMOJI_INFORMATIONAL:
      #EMOJI_UNDEFINED:
    events:
      - schedule:
          rate: cron(0 8 * * *)
          enabled: true
          
  ecr-scan-lambda:
    handler: bin/scan
    environment:
      ENV: ${self:provider.stage}
      AWS_REGION: us-east-1
      #ECR_ID: 
    events:
      - schedule:
          rate: cron(0 7 * * *)
          enabled: true